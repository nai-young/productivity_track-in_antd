const app = require('../config/app')
const http = require('http')
const connectDB = require('../config/db')
require('dotenv').config()

const port = normalizePort(process.env.PORT || 5001)

app.set(port, port)

const server = http.createServer(app)
server.listen(port, () => {
  console.log(`HTTP Server Connected on Port: ${port}`)
})
server.on('error', onError)

// Connect to database
connectDB()

// Normalize a port into a number, string, or false.
function normalizePort (val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    // named pipe
    return val
  }

  if (port >= 0) {
    // port number
    return port
  }

  return false
}

// Errors handler
function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
    default:
      throw error
  }
}
